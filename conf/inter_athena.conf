//--------------------------------------------------------------
// 熊貓模擬器 - 內部通訊配置檔案
// 由熊貓模擬器開發團隊翻譯成中文並加以潤色
//--------------------------------------------------------------
// 提示: 此配置檔案中, 只要是以 // 作為開頭的行, 都是註釋資訊. 
// 註釋資訊您可以隨意修改, 不會干擾伺服器的任何行為. 
//--------------------------------------------------------------

// 是否不主動返回伺服器的 IP 地址給到客戶端?
// 若您希望使用負載均衡或者反向代理等方式來提供服務,
// 且希望能更好的隱藏真實伺服器 IP 地址, 那麼請啟用此選項.
//
// 注意: 通常啟用此選項需要客戶端在 DIFF 的時候啟用代理伺服器支援選項
// 在 NEMO 中選項的英文名為: Enable Proxy Support
// 啟用此選項后客戶端將不會再聽命服務端返回的伺服器 IP 地址, 只會認定使用
// clientinfo.xml 或 sclientinfo.xml 的地址與服務端進行連線
//
// 注意: 啟用此選項將導致模擬器不支援多 IP 地圖伺服器架構,
// 但依然能夠支援同 IP 不同埠的地圖伺服器架構...
hide_server_ipaddress: off

// 是否記錄內部通訊日誌? 
// 這個選項啟用后當一個公會被建立、被解散、佔領新城池時
// 都會往 char_server_db 選項所指向的 interlog 表寫入日誌資訊
log_inter: 1

// 組隊均分經驗的等級限制
// 隊伍中級別最高的人和最低的人之間相差等級不能超過 15 級 (預設)
// 否則就無法開啟經驗均分選項
party_share_level: 80

// Amount of status points a new character will start with
start_status_points: 48

// 連線到 MySQL 數據庫時使用的預設連線編碼
// 注意: 這個特性只有在 MySQL 版本在 4.1 及更新的版本中才支援.
// 當下方 *_codepage 等選項為空時才會使用此處 default_codepage 的值.
//
// 若設定為 auto 則編碼規則會根據環境自動變化,
// 下面幾個 *_codepage 的選項若取值為 auto , 那麼其含義與此一致:
// 
// 1. 系統語言為簡體中文時, auto 將會自動變成 gbk 編碼
// 2. 系統語言為繁體中文時, auto 將會自動變成 big5 編碼
// 3. 其他語言將會使用數據庫 `character_set_database` 變數指定的編碼
// 
// 若執行熊貓模擬器的操作系統語言和你期望開服的遊戲內語言不一致,
// 那麼建議在此明確指定 gbk 或者 big5 編碼, 而不是 auto
default_codepage: auto

// 接下來涉及到的幾個 MySQL 數據庫伺服器的設定,
// 若您的 MySQL 伺服器和執行熊貓模擬器的同一臺物理機器的話,
// 請注意以下幾點建議:
// 
// 1. 如果您將熊貓模擬器執行在 Linux 系統, 那麼對 Linux 來說,
//    理想情況下 IP 地址應該使用 localhost 而不是 127.0.0.1
// 
// 2. 如果您將熊貓模擬器執行在 Windows 系統,
//    建議將 IP 地址設定為 127.0.0.1
// 
// 如果您在 Linux 系統下碰到類似:
// Can't connect to local MySQL server through socket '/tmp/mysql.sock' (2)
// 的錯誤提示, 那麼請果斷將 localhost 改成 127.0.0.1

// 登錄伺服器專用
// MySQL 主數據庫的連線配置資訊
// 注意: login_server_ip 如果是域名, 那麼禁止超過 63 個字元 (包括標點符號)
login_server_ip: 127.0.0.1
login_server_port: 3306
login_server_id: Ragnarok
login_server_pw: Ragnarok
login_server_db: ragnarok21
login_codepage: 
login_case_sensitive: no

// 登錄伺服器專用
// IP 封禁數據庫的連線配置資訊
// 注意: ipban_db_ip 如果是域名, 那麼禁止超過 63 個字元 (包括標點符號)
ipban_db_ip: 127.0.0.1
ipban_db_port: 3306
ipban_db_id: Ragnarok
ipban_db_pw: Ragnarok
ipban_db_db: ragnarok21
ipban_codepage: 

// 角色伺服器專用
// MySQL 主數據庫的連線配置資訊
// 注意: char_server_ip 如果是域名, 那麼禁止超過 63 個字元 (包括標點符號)
char_server_ip: 127.0.0.1
char_server_port: 3306
char_server_id: Ragnarok
char_server_pw: Ragnarok
char_server_db: ragnarok21
char_codepage: 

// 地圖伺服器專用
// MySQL 主數據庫的連線配置資訊
// 注意: map_server_ip 如果是域名, 那麼禁止超過 63 個字元 (包括標點符號)
map_server_ip: 127.0.0.1
map_server_port: 3306
map_server_id: Ragnarok
map_server_pw: Ragnarok
map_server_db: ragnarok21
map_codepage: 

// WEB 介面伺服器專用
// MySQL 主數據庫的連線配置資訊
//
// 提示: WEB 介面伺服器需要讀取 login 和 char 表,
// 因此您必須確保此配置檔案中 "登錄伺服器專用" 和 "角色伺服器專用" 的配置資訊是有效的,
// 這樣才能讓 WEB 伺服器可以訪問持有這兩個表的數據庫.
web_server_ip: 127.0.0.1
web_server_port: 3306
web_server_id: Ragnarok
web_server_pw: Ragnarok
web_server_db: ragnarok21
web_codepage:

// 登錄、地圖伺服器共用
// MySQL 日誌數據庫的連線配置資訊
// 注意: log_db_ip 如果是域名, 那麼禁止超過 63 個字元 (包括標點符號)
log_db_ip: 127.0.0.1
log_db_port: 3306
log_db_id: Ragnarok
log_db_pw: Ragnarok
log_db_db: log21
log_codepage: 
log_login_db: loginlog

// MySQL 掉線重連策略
// 如果由於某些原因導致熊貓模擬器和 MySQL 數據庫伺服器斷開連線,
// 那麼會按照下面配置的策略來嘗試重新連線
// 
// 若 mysql_reconnect_type 被設定為 1 時: 
// 
//     那麼當熊貓模擬器斷開和數據庫伺服器的連線后,
//     熊貓模擬器會嘗試重連數據庫伺服器, 
//     如果嘗試了 mysql_reconnect_count 所指定的次數后還是失敗, 
//     那麼相關伺服器程式將自行關閉
// 
// 若 mysql_reconnect_type 被設定為 2 時(預設):
//
//     那麼當熊貓模擬器斷開和數據庫伺服器的連線后,
//     熊貓模擬器會無限次嘗試重連數據庫
// 
// 提示: 這個選項沒什麼太大的必要改動, 建議維持預設
mysql_reconnect_type: 2
mysql_reconnect_count: 1

// >>><<<>>><<<>>><<<>>><<<>>><<<>>><<<>>><<<>>><<<>>><<<>>><<<
// 
// 注意注意: 請不要改變接下來的這些設定,
// 除非您對數據庫非常的瞭解, 並且知道自己在做什麼事情.
// 若沒有充分的理由建議您保持預設, 不要去修改他們.
// 
// >>><<<>>><<<>>><<<>>><<<>>><<<>>><<<>>><<<>>><<<>>><<<>>><<<

// 登錄伺服器的數據庫表名配置
login_server_account_db: login
ipban_table: ipbanlist

// 全部伺服器的數據庫表名配置
global_acc_reg_num_table: global_acc_reg_num
global_acc_reg_str_table: global_acc_reg_str

// 角色伺服器的數據庫表名配置
char_db: char
hotkey_db: hotkey
scdata_db: sc_data
cart_db: cart_inventory
inventory_db: inventory
charlog_db: charlog
skill_db: skill
interlog_db: interlog
memo_db: memo
guild_db: guild
guild_alliance_db: guild_alliance
guild_castle_db: guild_castle
guild_expulsion_db: guild_expulsion
guild_member_db: guild_member
guild_skill_db: guild_skill
guild_position_db: guild_position
guild_storage_db: guild_storage
party_db: party
pet_db: pet
friend_db: friends
mail_db: mail
mail_attachment_db: mail_attachments
auction_db: auction
quest_db: quest
homunculus_db: homunculus
skill_homunculus_db: skill_homunculus
mercenary_db: mercenary
mercenary_owner_db: mercenary_owner
elemental_db: elemental
skillcooldown_db: skillcooldown
bonus_script_db: bonus_script
acc_reg_num_table: acc_reg_num
acc_reg_str_table: acc_reg_str
char_reg_str_table: char_reg_str
char_reg_num_table: char_reg_num
clan_table: clan
clan_alliance_table: clan_alliance

// 地圖伺服器的數據庫表名配置
barter_table: barter
buyingstore_table: buyingstores
buyingstore_items_table: buyingstore_items
item_table: item_db
renewal-item_table: item_db_re
item2_table: item_db2
renewal-item2_table: item_db2_re
item_cash_table: item_cash_db
item_cash2_table: item_cash_db2
mob_table: mob_db
renewal-mob_table: mob_db_re
mob2_table: mob_db2
renewal-mob2_table: mob_db2_re
mob_skill_table: mob_skill_db
renewal-mob_skill_table: mob_skill_db_re
mob_skill2_table: mob_skill_db2
renewal-mob_skill2_table: mob_skill_db2_re
mapreg_table: mapreg
sales_table: sales
vending_table: vendings
vending_items_table: vending_items
market_table: market
roulette_table: db_roulette
guild_storage_log: guild_storage_log
suspend_table: suspend

// WEB 介面伺服器的數據庫表名配置
guild_emblems_table: guild_emblems
user_configs_table: user_configs
char_configs_table: char_configs
merchant_configs_table: merchant_configs
recruitment_table: recruitment

// 是否讓地圖伺服器載入 SQL 版本的 item_db, mob_db 及 mob_skill_db? (yes/no)
// 若改成 yes 的話, 地圖伺服器將不會再載入 db 目錄中的 item_db.yaml、
// mob_db.txt 及 mob_skill_db.txt, 而是轉而載入這些檔案在數據庫中對應的表.
// 
// 將此選項改成 yes 之前, 請先往 map_server_db 選項所指向的主數據庫匯入以下的 SQL 指令碼,
// 否則 map-server 將找不到物品和魔物等數據:
// 
// 無論你使用的是復興前還是復興后的版本, 
// 請按順序匯入 sql-files\main\creation\use_sql_db\common 目錄中的全部檔案
// 
// 若您使用的是復興后 (Renewal) 版本, 
// 請按順序匯入 sql-files\main\creation\use_sql_db\renewal 目錄中的全部檔案
// 
// 若您使用的是復興前 (Pre-Renewal) 版本, 
// 請按順序匯入 sql-files\main\creation\use_sql_db\pre-renewal 目錄中的全部檔案
// 
// 匯入之後也就意味著 item_db 等資訊都已經被搬入到 MySQL 數據庫中了, 
// 以後您想再修改 item_db 等資訊時, 將不再是修改 db\[pre-]re\item_db.yaml 檔案了
// 而是去 MySQL 數據庫中直接更新對應的表.
// 
// 提示: 魔物數據庫 mob_db 和魔物技能數據庫 mob_skill_db 同理
use_sql_db: no

inter_server_conf: inter_server.yml

import: conf/import/inter_conf.txt
