//--------------------------------------------------------------
// 熊貓模擬器 - 登錄伺服器配置檔案
// 本配置檔案由 Peter Kieser <pfak@telus.net> 翻譯成英文
// 由熊貓模擬器開發團隊翻譯成中文並加以潤色
//--------------------------------------------------------------
// 提示: 此配置檔案中, 只要是以 // 作為開頭的行, 都是註釋資訊. 
// 註釋資訊您可以隨意修改, 不會干擾伺服器的任何行為. 
//--------------------------------------------------------------

// 登錄伺服器會監聽來自這個IP地址的網絡卡資訊
// 注意: 該選項允許你在有多個公網網絡卡(也意味著有多個公網IP)的機器上, 
//       使用相同的"登錄伺服器埠"來開多個服. 
// 提醒: 若您想啟用 bind_ip 選項的話, 記得去掉 bind_ip 前面的註釋符: //,
//       否則伺服器會忽略它, 導致配了和沒配一樣. 
bind_ip: 127.0.0.1

// 登錄伺服器埠 (預設埠為: 6900)
// 此埠會開放給角色伺服器與遊戲客戶端建立連線
login_port: 6900

// 往控制檯視窗中顯示內容時, 在每行資訊的前面加上時間戳. 
// 最終組成的時間最大長度不能超過 20 個字元.
//  
// 常用的時間格式有:
//    %I:%M:%S %p (小時:分鐘:秒數 12小時制, 會攜帶AM或PM標記)
//    %H:%M:%S (小時:分鐘:秒數, 24小時制)
//    %d/%b/%Y (日期/月份/年份)
// 更多的格式資訊, 請參考 C 語言的 strftime 函式用法. 
// 
// rAthena 官方預設值是 [%d/%b %H:%M] 也就是24小時制的 [日/月 時:分]
// 這明顯不符合國人習慣, 為此熊貓模擬器將其預設值改成了 [%Y/%m/%d %H:%M] 
// 
// 若想啟用時間戳的話, 請將下面這一行頭部的註釋符//去掉
//timestamp_format: [%Y/%m/%d %H:%M] 

// 當服務端程式被一些啟動器 (LeeStarter) 執行, 從而導致輸出資訊被重定向時, 
// 是否也將顏色程式碼一同輸出? 
// 
// 問: 這裡提到的重定向是指什麼? 
// 答: 原本登錄伺服器的資訊將直接顯示到控制檯視窗, 不過若使用一些啟動工具
//     來啟動登錄伺服器的話, 原本應該顯示到控制檯的資訊, 就會被"劫持"到了
//     啟動工具裡面顯示, 這種情況稱之為"輸出資訊被重定向了"!
// 
// 問: 這裡提到的顏色程式碼是指什麼? 
// 答: 在我們檢視控制檯的過程中, 會發現類似 [Status] 的字是綠色的, 
//     而 [Error] 是紅色的. 這是因為在程式往控制檯輸出資訊時, 加入了一些
//     顏色編碼的緣故. 比如, 若使用顏色編碼 "\033[1;31m" 那麼則表示接下來的
//     字元用紅色輸出. 其實有點類似我們指令碼中使用的 ^xxxxxx 顏色程式碼. 
// 
// 此選項一般情況下推薦關閉, 因為基本沒什麼啟動器支援著色
stdout_with_ansisequence: no

// 記錄登錄伺服器在控制檯中產生的部分資訊到 /log/ 目錄中
// 首先您要確保熊貓模擬器的目錄中有一個 log 資料夾, 沒有的話必須手動建立, 
// 否則日誌檔案將不會產生.
// 
// 1: 記錄控制檯中以  [Warning] 開頭的警告資訊
// 2: 記錄控制檯中以  [Error]   開頭的錯誤資訊和數據庫錯誤資訊
// 4: 記錄控制檯中以  [Debug]   開頭的除錯資訊
// 
// 例如: 想要記錄 [Warning]、[Error]、[Debug] 開頭的資訊, 
//       只需要將1、2、4相加, 將 console_msg_log 設定為 7 即可 (1+2+4)! 
// 
// 日誌資訊的記錄並不會被 console_silent 選項影響.
// 也就是說假如 console_msg_log 設定為 2 想記錄 [Error] 資訊,
// 而在 console_silent 中設定為 16 想隱藏 [Error] 資訊,
// 此時系統將會隱藏 [Error] 資訊不顯示到控制檯, 但與此同時會記錄 [Error] 資訊到日誌中
console_msg_log: 0

// 將登錄伺服器在控制檯中產生的要記錄的資訊, 寫到下面指定的日誌檔案中
console_log_filepath: ./log/login-msg_log.log

// 選擇性隱藏登錄伺服器控制檯中顯示出來的一些提示資訊: 
// 1:  隱藏控制檯中以  [Info]    開頭的提示資訊
// 2:  隱藏控制檯中以  [Status]  開頭的狀態資訊
// 4:  隱藏控制檯中以  [Notice]  開頭的注意資訊
// 8:  隱藏控制檯中以  [Warning] 開頭的警告資訊
// 16: 隱藏控制檯中以  [Error]   開頭的錯誤資訊和數據庫錯誤資訊
// 32: 隱藏控制檯中以  [Debug]   開頭的除錯資訊
// 若您想同時隱藏多種資訊, 只需要將其對應的數字相加即可
// 例如: 若您想要隱藏[Info]、[Status]、[Notice]開頭的資訊, 
//       那麼只需要將1、2、4相加, 填寫 7 即可 (1+2+4)
console_silent: 0

// 是否允許在登錄伺服器的控制檯中直接輸入指令
// 開啟控制檯指令后, 您可以在 login-server 的控制檯中輸入命令
// 
// 在登錄伺服器的控制檯中輸入 help 然後回車, 可以檢視指令說明
// 比如: 輸入 server:reloadconf 可以讓登錄伺服器重新讀取相關的配置檔案
// 還能輸入 "create:使用者名稱 密碼 性別" (不含引號)來直接建立新賬號
// 
// 想要啟用這個功能的話, 請將下面的值改成on即可
// 若啟用, 那麼請避免在控制檯中使用 ">& 日誌檔案.log" 這樣的輸出指令
console: off

// 是否允許使用 _M/_F 的方式來註冊新賬號?
// 注意: 只有在客戶端未開啟"密碼加密機制"時, 使用 _M/_F 方式來註冊賬號才有效.
// 
// Sola丶小克:
// 上述提到的"密碼加密機制"目前暫不明確是哪個具體功能.
// 使用 NEMO 對 20180620 的客戶端進行 DIFF 處理時, 並沒有出現類似的選項.
new_account: yes

// 若您將 new_account 設定為 yes 的話
// 那麼是否要求新建的賬號和密碼的長度都必須大於等於 4 個字元?
//  
// 在一般情況下推薦設定為 yes, 除非您在 Diff 客戶端的時候
// 啟用了 'Disable 4 LetterUserID/Password' 選項, 那麼可以設定為 no
new_acc_length_limit: yes

// 批量註冊賬號攻擊防護
// 在 time_allowed 秒內最多允許註冊 allowed_regs 個賬號
allowed_regs: 1
time_allowed: 10

// 是否記錄登錄伺服器產生的日誌?
// 記錄的日誌包括以下內容, 這些內容會記錄到數據庫的 loginlog 表中:
// 
//   登錄伺服器啟動時記錄日誌
//   登錄伺服器關閉時記錄日誌
//   某個使用者的滑鼠密碼驗證失敗時記錄日誌
//   某個使用者登錄成功
//   某個使用者登錄失敗
//   角色伺服器和登錄伺服器建立了連線
//   某個被加入黑名單的IP地址對登錄伺服器發起連線請求
// 
// 設定為 yes 則表示記錄日誌(預設), 設定為 no 則表示不記錄日誌
// 
// 注意: 若設定為 no 的話會影響 ipban_enable 的功能,
//       因為 ipban 依賴這裡的登錄日誌, 來查詢某 IP 在一段時間內的密碼錯誤次數.
log_login: yes

// 登錄伺服器在需要顯示時間的時候, 用什麼格式顯示?
// 
// 這個欄位被使用的地方其實比較有限, 目前找到下面兩個: 
// 1、當玩家登錄時如果這個賬號已經被封禁, 那麼會在登錄伺服器的控制檯中
//    顯示出一個日期, 這個日期就遵循下面的格式. 
// 2、當角色伺服器請求登錄伺服器封禁一個賬號時, 在登錄伺服器的控制檯中
//    也會顯示出一個提示資訊, 這個日期也會遵循下面的格式. 
date_format: %Y-%m-%d %H:%M:%S

// 只允許 group_id >>等於<< 指定數字的賬號才能登錄到伺服器
// 假如您填寫的數字是 99 那麼表示只有 group_id 等於 99 的賬號才能登錄
// 其他賬號登入時則會提示伺服器正在維護, 無法登錄
// 
// 填寫 -1 表示關閉此機制(預設)
// 填寫 0 或其他大於 0 的數, 則表示僅 group_id 等於指定值的賬號可登陸
group_id_to_connect: -1

// 只允許 group_id >>大於或等於<< 指定數字的賬號才能登錄到伺服器
// 假如您填寫的數字是 10 那麼表示只有 group_id 大於等於 10 的賬號才能登錄
// 其他賬號登入時則會提示伺服器正在維護, 無法登錄
// 
// 注意: 如果 group_id_to_connect 的值不是-1的話, 那麼此開關無效
// 填寫 -1 表示關閉此機制, 不作任何限制 (預設)
// 填寫 0 或其他大於 0 的數, 則表示僅 group_id 大於等於指定值的賬號可登陸
min_group_id_to_connect: -1

// VIP玩家組對應的 group_id 是哪個? (預設值為: 5)
// 當一個玩家被提升到 VIP 玩家組時, 那麼他的 group_id 會變成這裡的指定值
vip_group: 5

// 普通賬號允許建立幾個角色? 
// 
// 你不能建立超過 MAX_CHARS 個賬號角色, 他在 mmo.hpp 中配置.
// 如果設定為 0, 則只能建立 MIN_CHARS 個角色.
chars_per_account: 0

// VIP 賬號允許比普通賬號多建立幾個角色?
// Increase the value of MAX_CHARS if you want to increase vip_char_increase.
// Note: The amount of VIP characters = MAX_CHARS - chars_per_account.
// Note 2: This setting must be set after chars_per_account.
// -1 will default to MAX_CHAR_VIP (src/config/core.hpp)
vip_char_increase: -1

// 剛建立的賬號有多長的遊戲時間? 
// 若設定為 -1 表示新建的賬號擁有無限的遊戲時間(預設)
// 若設定為 0 或者其他數字, 則表示新賬號將在指定的秒數之後將直接過期
//
// 當過期時間到了之後, 這個賬號若線上則會被強制下線, 並無法再登錄
// 除非完成相關的續期操作, 才能重新進入遊戲
start_limited_time: -1

// 儲存密碼到 login 數據表時,
// 是否使用對密碼進行 MD5 雜湊處理, 而不是儲存密碼明文? 
// 
// 提示: 當客戶端使用 <passwordencrypt> 機制的話, 此功能不可用. 
// 
// Sola丶小克: 
// 不清楚 <passwordencrypt> 機制是個什麼東西, 按字面意思是<密碼加密機制>, 
// 若您知道的話, 望不吝賜教, 感謝! 郵箱是: cairoliyu@gmail.com
// 
// 若你之前使用 no 選項, 現在想修改成 yes 的話,
// 需要在主數據庫中執行以下查詢語句:
// UPDATE `login` SET `user_pass`=MD5(`user_pass`);
// 否則修改此選項之前註冊的賬號將無法正常登錄. (感謝"好刀一把"建議).
use_MD5_passwords: no

// 以下四個選項僅在客戶端版本大於等於 20170726 時有效
// 當玩家輸入賬號密碼后客戶端會提示選擇線路, 此時是否隱藏伺服器壓力說明?
usercount_disable: no
// 線上人數小於等於 usercount_low 指定人數, 則顯示成綠色空閑狀態 (Smooth)
usercount_low: 200
// 線上人數小於等於 usercount_medium 指定人數, 則顯示成黃色普通狀態 (Normal)
usercount_medium: 500
// 線上人數小於等於 usercount_high 指定人數, 則顯示成紅色繁忙狀態 (Busy)
usercount_high: 1000

// 是否啟用 IP 地址黑名單功能
ipban_enable: yes

// 當密碼重試超過指定次數時, 是否將 IP 加入黑名單?
ipban_dynamic_pass_failure_ban: yes

// 在幾分鐘內密碼重試次數超過限制時, 加入黑名單? (預設5次)
ipban_dynamic_pass_failure_ban_interval: 5

// 當密碼重試次數達到多少次之後, 認為超過限制? (預設7次)
ipban_dynamic_pass_failure_ban_limit: 7

// 將 IP 加入黑名單后, 封禁多長時間(以分鐘為單位)? (預設5分鐘)
ipban_dynamic_pass_failure_ban_duration: 5

// 每間隔多少秒自動清理過了封禁期的 IP 地址? 0 = 不清理. 預設值為 60.
// 提示: 如果設定為不清理, 那麼過了封禁期的 IP 地址將會在登錄伺服器啟動和退出時被清空. 
// 玩家的 IP 地址雖然還在黑名單列表中, 不過由於已經過了封禁期, 所以玩家可以正常登錄. 
ipban_cleanup_interval: 60

// 間隔多少分鐘進行一次 DNS/IP 更新? (此功能預設關閉)
// 若您的伺服器使用的是動態 IP 地址, 且每過一段時間 IP 地址會自動變化的話, 請啟用此選項.
// 建議: 使用花生殼等 DDNS 服務的話, 此選項視情況應該打開.
//ip_sync_interval: 10

// 是否啟用 DNS 封禁黑名單機制?
// 若啟用此機制, 任何連線請求都會先檢查對方是否在黑名單中, 若在黑名單中則禁止連線
// 
// 問: 為什麼叫「DNS封禁黑名單」? 
// 答: 因為系統用來判定對方是否在黑名單中的根據, 是將 IP 地址組成一個域名, 然後看看
//     這個域名是否已經被 DNS 伺服器所解析, 若是, 則認為對方在黑名單中. 
// 
// 問: 具體的工作機制是什麼樣的? 
// 答: 當一個伺服器收到連線請求時, 會先獲得對方的 IP 地址, 比如127.0.0.1, 然後將這個
//     IP地址反序, 變成 1.0.0.127, 然後拼接上 dnsbl_servers 所指定的DNS伺服器, 比如
//     若和 bl.blocklist.de 拼接, 那麼最終會拿到一個為 1.0.0.127.bl.blocklist.de 的
//     域名, 然後對這個域名做解析, 如果解析成功, 則認為對方在黑名單內. 
// 
// 問: 為什麼會有這樣的機制存在? 
// 答: 在國外會有一些安全機構(或者個人), 他們會找出一些攻擊過某些伺服器的 IP 地址, 將
//     他們用上面的方式變成一個域名, 並完成解析來標記這個 IP 地址為壞人, 
//     以此來協助其他人, 來快速的識別一個 IP 地址是否可以信任. 
// 
// 問: 啟用此選項會有什麼副作用么?
// 答: 從原理上講, 啟用這個機制會導致每一次連線都會做IP地址檢查, 所以開啟之前玩家
//     輸入賬號密碼后登錄會很快的返回登錄結果, 開啟之後可能要比原來多花 1-2 秒的時間! 
//     此外, 這個機制依賴伺服器本身的 DNS 伺服器可靠性, 假設有人劫持您的 DNS 解析結果, 
//     讓每一個請求都返回「已解析」的樣子, 那麼會導致登錄伺服器拒絕一切連線. 
use_dnsbl: no

// 設定提供封禁查詢服務的 DNS 伺服器地址 (有多個則用逗號分隔)
//
// 在這裡可以查到免費的DNS黑名單服務:
// http://en.wikipedia.org/wiki/Comparison_of_DNS_blacklists
// ==============================================================================
// DNS 黑名單伺服器                描述
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// bl.blocklist.de                 IP-Addresses who attack other servers/honeypots over SSH, FTP, IMAP, etc.
// ircbl.ahbl.org                  AHBL (open proxies, compromised machines, comment spammers)
// safe.dnsbl.sorbs.net            All zones in dnsbl.sorbs.net except "recent" and "escalations"
// sbl-xbl.spamhaus.org            Spamhaus blacklist (spammers, open proxies)
// socks.dnsbl.sorbs.net           Open SOCKS proxy servers
// tor.ahbl.org                    Current tor relay and exit nodes
dnsbl_servers: bl.blocklist.de, socks.dnsbl.sorbs.net

// 是否校驗客戶端的 MD5 指紋?
// 若打開此選項, 那麼登錄伺服器會校驗客戶端的 MD5 指紋
// 如果是不認識的客戶端, 則禁止連線到伺服器.
// 提示: 您可以檢視 'doc/md5_hashcheck.txt' 以便獲得更詳細的資訊.
client_hash_check: off

// Enable web authentication token system
// This is required for new clients that get data via an additional API over HTTP
use_web_auth_token: yes

// 客戶端指紋驗證策略
// 限制只有 group_id 大於等於指定數值的玩家, 可以使用指定指紋的客戶端登錄遊戲
// 
// 當您指定一個指紋為 'disabled' 的話, 則表示 group_id 大於等於指定數值的玩家
// 可以無視客戶端指紋限制, 隨時都可以登錄遊戲 (哪怕客戶端不發送 MD5 指紋, 都可以登錄)
// 
// 注意: 想使用此功能那麼必須在 Diff 客戶端的時候, 讓客戶端發送指紋封包
// 具體做法是, 在使用NEMO對客戶端進行 Diff 的時候, 啟用 'Force Send Client Hash Packet (Experimental)' 選項
//
// 格式: group_id, 客戶端的雜湊指紋
// 提示: 檢視 'doc/md5_hashcheck.txt' 可獲得更詳細的資訊.
//client_hash: 0, 113e195e6c051bb1cfb12a644bb084c5
//client_hash: 10, cb1ea78023d337c38e8ba5124e2338ae
//client_hash: 99, disabled

//===================================
// 熊貓模擬器拓展設定
//===================================
// 是否禁止使用中文字元作為遊戲賬號?
// 啟用此選項之後, 在使用 _M/_F 方式註冊賬號時, 只允許使用以下字元作為遊戲賬號:
// 0~9、a-z、A-Z, 以及 ~!@#$%^&*()_-=+`[]{}\|;:'"<>,.?/ (不含空格)
// 預設值為: yes
strict_new_account_userid: yes

// 是否隱藏角色伺服器的線上人數?
// 設定為 yes 的話, 就算玩家自己修改 msgstringtable.txt 中的內容,
// 強行在 484 行中新增 %d 參數企圖顯示線上人數, 也會永遠返回 0 人線上.
// 預設值為: no
//
// 建議: 啟用此選項之後, 最好將客戶端 data/msgstringtable.txt 中
// 第 484 行附近的 " 目前線上 %d 人#" 文字資訊中的 %d 去掉,
// 比如直接填寫一個井號, 變成空行: "#"
// 否則每次使用者登錄看到的線上人數都是 0 人, 會顯得有點奇怪.
//
// 若您使用的客戶端版本大於或等於 2017-07-26 的話, 客戶端應該已經不再顯示
// 出詳細的線上人數了, 改而使用顏色和繁忙程度來描述伺服器的壓力.
// 與伺服器繁忙程度和顏色相關的選項, 在本檔案的 usercount_disable 選項附近.
//
// 儘管如此, 無論您是否啟用或者關閉 usercount_disable 選項,
// 當客戶端版本大於或等於 2017-07-26 時啟用此選項,
// 登錄伺服器也將強制把此檔案中的 usercount_disable 選項設定為 yes.
hide_online_players_count: no

import: conf/inter_athena.conf
import: conf/import/login_conf.txt
