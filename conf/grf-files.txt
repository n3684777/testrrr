//--------------------------------------------------------------
// GRF 路徑配置檔案
//--------------------------------------------------------------
// 這裡可以隨意新增您想載入的 GRF 檔案.
// 
// 這個配置檔案用處已經不像幾年前那麼大了.
// 在最開始的 Athena 系列服務端中, 這個配置檔案很重要.
// 因為地圖伺服器會根據這裡指定的 GRF 檔案(或指定的 data 目錄)
// 去讀取它裡面的 gat 檔案和 rsw 檔案,
// 以此來確定地圖中有哪些格子是玩家不能移動的, 或有水域覆蓋的.
// 
// 現代的 rAthena 服務端中引入了 mapcache 地圖快取概念,
// 通過 mapcache.exe 可以快速的將 GRF 中的資料生成 map_cache.dat 檔案,
// 這樣地圖伺服器啟動時, 就無需再去讀取 GRF 檔案, 從而提高了載入速度. 
// 
// 地圖伺服器現在已經優先讀取 mapcache.dat 檔案,
// 除非在 conf/map_athena.conf 配置檔案中的 use_grf 中改成 yes,
// 否則地圖伺服器不會再讀取此配置檔案, 也不會根據此處的配置
// 去讀取 GRF 檔案(或指定的 data 目錄)中的地圖資料.
// 
// 此檔案現在主要變成了 mapcache.exe 的配置檔案.
// 只需要將想讀取的 GRF 檔案(或指定的 data 目錄)在這裡設定好,
// 執行 mapcache.exe 就可以生成地圖快取檔案(map_cache.dat). 
//--------------------------------------------------------------


//--------------------------------------------------------------
// 注意事項
//--------------------------------------------------------------
// 使用地圖快取檔案可以有效提高載入速度,
// 也不需要在伺服器上存放巨大的客戶端 GRF 檔案(或解壓後的 data 目錄).
// 
// 但缺點其實也比較明顯, 只是不常遇到:
// 當你客戶端的地圖有變化時, 你需要通過 WeeMapCache.exe 手動維護,
// 或者使用 mapcache.exe 重新生成地圖快取檔案.
//
// 現在越來越多的人開服都會新增大量的自定義地圖,
// 韓服官方近幾年也對地圖進行了較高頻度的微調, 此時越需要注意
// 在每次新增/更新地圖檔案時重新整理地圖快取檔案, 否則會導致遊戲內表現異常.
//--------------------------------------------------------------

//--------------------------------------------------------------
// 下面這兩行配置資訊是 rAthena 官方自帶的例子.
// 只需要將 grf: 左側的註釋符 // 去掉即可啟用, 否則程式將無視他們. 
//--------------------------------------------------------------
//grf: C:\Program Files\Gravity\RO\rdata.grf
//grf: C:\Program Files\Gravity\RO\data.grf

//--------------------------------------------------------------
// 除了通過直接指定 grf 檔案外,
// 還可以直接配置到已經被解壓的 data 目錄.
// 
// 請填寫遊戲安裝目錄, 而不是具體到 data\ 目錄的路徑
// 
// 舉個例子:
// C:\Program Files\Gravity\RO\          RIGHT! 這是正確的
// C:\Program Files\Gravity\RO\data\     ERROR! 這是錯誤的
//--------------------------------------------------------------
//data_dir: C:\Program Files\Gravity\RO\
